<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../fmx.xsl"?>
<fmx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="m_crc32.f90">
    <context>
        <time>2025-03-09T18:24:38</time>
        <version>1.0.0.1</version>
        <path>src</path>
        <path_to_root>../</path_to_root>
        <project>Frypto</project>
        <name>m_crc32.f90</name>
        <copyright>Copyright © 2020, Fran Martinez Fadrique &lt;Fran.Martinez.Fadrique@gmail.com&gt;</copyright>
    </context>
    <units>
        <unit name="m_crc32" type="module">
            <main>
                <lines>
                    <source percent="28.57">20</source>
                    <comments percent="47.14">33</comments>
                    <empty percent="24.29">17</empty>
                    <total>70</total>
                </lines>
                <complexity>
                    <minimum>0</minimum>
                    <maximum>0</maximum>
                    <average>0.00</average>
                </complexity>
                <nesting>
                    <minimum>0</minimum>
                    <maximum>0</maximum>
                    <average>0.00</average>
                </nesting>
                <methods>0</methods>
            </main>
            <methods>
                <method name="crc32_default" type="function">
                    <statistics>
                        <lines>
                            <source percent="36.36">4</source>
                            <comments percent="27.27">3</comments>
                            <empty percent="36.36">4</empty>
                            <total>11</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="crc32_encode_buffer" type="function">
                    <statistics>
                        <lines>
                            <source percent="35.90">14</source>
                            <comments percent="28.21">11</comments>
                            <empty percent="35.90">14</empty>
                            <total>39</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>2</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="crc32_encode_string" type="function">
                    <statistics>
                        <lines>
                            <source percent="33.33">6</source>
                            <comments percent="27.78">5</comments>
                            <empty percent="38.89">7</empty>
                            <total>18</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>1</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
                <method name="crc32_init_table" type="subroutine">
                    <statistics>
                        <lines>
                            <source percent="41.67">15</source>
                            <comments percent="25.00">9</comments>
                            <empty percent="33.33">12</empty>
                            <total>36</total>
                        </lines>
                        <complexity>
                            <minimum>0</minimum>
                            <maximum>5</maximum>
                            <average>0.00</average>
                        </complexity>
                        <nesting>
                            <minimum>0</minimum>
                            <maximum>4</maximum>
                            <average>0.00</average>
                        </nesting>
                    </statistics>
                </method>
            </methods>
            <statistics>
                <lines>
                    <source percent="33.91">59</source>
                    <comments percent="35.06">61</comments>
                    <empty percent="31.03">54</empty>
                    <total>174</total>
                </lines>
                <complexity>
                    <minimum>1</minimum>
                    <maximum>5</maximum>
                    <average>2.25</average>
                </complexity>
                <nesting>
                    <minimum>1</minimum>
                    <maximum>4</maximum>
                    <average>2.00</average>
                </nesting>
                <methods>4</methods>
            </statistics>
        </unit>
    </units>
    <statistics>
        <lines>
            <source percent="33.91">59</source>
            <comments percent="35.06">61</comments>
            <empty percent="31.03">54</empty>
            <total>174</total>
        </lines>
        <complexity>
            <minimum>1</minimum>
            <maximum>5</maximum>
            <average>2.25</average>
        </complexity>
        <nesting>
            <minimum>1</minimum>
            <maximum>4</maximum>
            <average>2.00</average>
        </nesting>
        <methods>4</methods>
    </statistics>
    <code>
        <line t="M" i="1" b="0" n="0">module m_crc32</line>
        <line t="M" i="2" b="0" n="0"></line>
        <line t="C" i="3" b="0" n="0">! -----------------------------------------------------------------------------</line>
        <line t="C" i="4" b="0" n="0">! Copyright : 2022, Fran Martinez Fadrique &lt;Fran.Martinez.Fadrique@gmail.com&gt;</line>
        <line t="C" i="5" b="0" n="0">! Project   : Atlantis</line>
        <line t="C" i="6" b="0" n="0">! Author    : Fran Martinez Fadrique</line>
        <line t="C" i="7" b="0" n="0">! Language  : Object Oriented Fortran 2018</line>
        <line t="C" i="8" b="0" n="0">! Synopsis  : Cyclic redundancy code/checksum; 4 bytes</line>
        <line t="C" i="9" b="0" n="0">!             Ref: https://rosettacode.org/wiki/CRC-32#Fortran</line>
        <line t="C" i="10" b="0" n="0">!</line>
        <line t="C" i="11" b="0" n="0">! License   : This file is part of Frypto.</line>
        <line t="C" i="12" b="0" n="0">!</line>
        <line t="C" i="13" b="0" n="0">!             Frypto is free software: you can redistribute it and/or modify</line>
        <line t="C" i="14" b="0" n="0">!             it under the terms of the GNU Lesser General Public License as</line>
        <line t="C" i="15" b="0" n="0">!             published by the Free Software Foundation, either version 3 of</line>
        <line t="C" i="16" b="0" n="0">!             the License, or (at your option) any later version.</line>
        <line t="C" i="17" b="0" n="0">!</line>
        <line t="C" i="18" b="0" n="0">!             Frypto is distributed in the hope that it will be useful,</line>
        <line t="C" i="19" b="0" n="0">!             but WITHOUT ANY WARRANTY; without even the implied warranty of</line>
        <line t="C" i="20" b="0" n="0">!             MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</line>
        <line t="C" i="21" b="0" n="0">!             See the GNU Lesser General Public License for more details.</line>
        <line t="C" i="22" b="0" n="0">!</line>
        <line t="C" i="23" b="0" n="0">!             You should have received a copy of the GNU Lesser General Public</line>
        <line t="C" i="24" b="0" n="0">!             License along with Frypto.  </line>
        <line t="C" i="25" b="0" n="0">!             If not, see &lt;http://www.gnu.org/licenses/&gt;.</line>
        <line t="C" i="26" b="0" n="0">! -----------------------------------------------------------------------------</line>
        <line t="C" i="27" b="0" n="0"></line>
        <line t="C" i="28" b="0" n="0">! Dependencies ----------------------------------------------------------------</line>
        <line t="C" i="29" b="0" n="0"></line>
        <line t="X" i="30" b="0" n="0">  use m_object</line>
        <line t="X" i="31" b="0" n="0">  use m_util_convert</line>
        <line t="X" i="32" b="0" n="0">  </line>
        <line t="X" i="33" b="0" n="0">  implicit none</line>
        <line t="X" i="34" b="0" n="0"></line>
        <line t="C" i="35" b="0" n="0">! Public/Private declarations -------------------------------------------------</line>
        <line t="C" i="36" b="0" n="0"></line>
        <line t="X" i="37" b="0" n="0">  private</line>
        <line t="X" i="38" b="0" n="0">  public t_crc32, crc32</line>
        <line t="X" i="39" b="0" n="0"></line>
        <line t="C" i="40" b="0" n="0">! Module declarations ---------------------------------------------------------</line>
        <line t="C" i="41" b="0" n="0"></line>
        <line t="C" i="42" b="0" n="0">! Cyclic redundancy code/checksum; 4 bytes</line>
        <line t="T" i="43" b="0" n="0">  type, extends(t_object) :: t_crc32</line>
        <line t="X" i="44" b="0" n="0">    private</line>
        <line t="X" i="45" b="0" n="0"></line>
        <line t="C" i="46" b="0" n="0">!     Lookup table for CRC polynomial</line>
        <line t="X" i="47" b="0" n="0">      integer, dimension(0:255) :: table = 0</line>
        <line t="X" i="48" b="0" n="0"></line>
        <line t="X" i="49" b="0" n="0">    contains</line>
        <line t="X" i="50" b="0" n="0"></line>
        <line t="C" i="51" b="0" n="0">!     Initialse the lookup table</line>
        <line t="X" i="52" b="0" n="0">      procedure :: init_table =&gt; crc32_init_table</line>
        <line t="X" i="53" b="0" n="0"></line>
        <line t="C" i="54" b="0" n="0">!     Cenerate the CRC</line>
        <line t="X" i="55" b="0" n="0">      generic :: encode =&gt; crc32_encode_string, crc32_encode_buffer</line>
        <line t="X" i="56" b="0" n="0">      procedure, private :: crc32_encode_string</line>
        <line t="X" i="57" b="0" n="0">      procedure, private :: crc32_encode_buffer</line>
        <line t="X" i="58" b="0" n="0"></line>
        <line t="T" i="59" b="0" n="0">  end type t_crc32</line>
        <line t="T" i="60" b="0" n="0"></line>
        <line t="C" i="61" b="0" n="0">! Constructor interface</line>
        <line t="X" i="62" b="0" n="0">  interface crc32</line>
        <line t="X" i="63" b="0" n="0">    module procedure crc32_default</line>
        <line t="X" i="64" b="0" n="0">  end interface crc32</line>
        <line t="X" i="65" b="0" n="0"></line>
        <line t="C" i="66" b="0" n="0">! Implementation --------------------------------------------------------------</line>
        <line t="C" i="67" b="0" n="0"></line>
        <line t="X" i="68" b="0" n="0">contains</line>
        <line t="X" i="69" b="0" n="0"></line>
        <line t="C" i="70" b="0" n="0">! Default constructor</line>
        <line k="crc32_default" t="F" i="71" b="1" n="1">elemental function crc32_default() result(res)</line>
        <line t="F" i="72" b="1" n="1"></line>
        <line t="C" i="73" b="1" n="1">! Returned object</line>
        <line t="X" i="74" b="1" n="1">  type(t_crc32) :: res</line>
        <line t="X" i="75" b="1" n="1"></line>
        <line t="C" i="76" b="1" n="1">! Initialise the lookup table</line>
        <line t="X" i="77" b="1" n="1">  call res%init_table()</line>
        <line t="X" i="78" b="1" n="1"></line>
        <line t="EF" i="79" b="1" n="1">end function crc32_default</line>
        <line t="EF" i="80" b="1" n="1"></line>
        <line t="EF" i="81" b="1" n="1"></line>
        <line t="C" i="82" b="1" n="1">! Initialise CRC lookup table</line>
        <line t="C" i="83" b="1" n="1">! Algorithm from https://rosettacode.org/wiki/CRC-32#Fortran</line>
        <line k="crc32_init_table" t="S" i="84" b="1" n="1">pure subroutine crc32_init_table( this )</line>
        <line t="S" i="85" b="1" n="1"></line>
        <line t="C" i="86" b="1" n="1">! Calling object</line>
        <line t="X" i="87" b="1" n="1">  class(t_crc32), intent(inout) :: this</line>
        <line t="X" i="88" b="1" n="1"></line>
        <line t="C" i="89" b="1" n="1">! Local variables</line>
        <line t="X" i="90" b="1" n="1">  integer :: i, j, k</line>
        <line t="X" i="91" b="1" n="1"></line>
        <line t="C" i="92" b="1" n="1">! Loop on the table elements</line>
        <line t="X" i="93" b="2" n="2">  do i = 0, 255</line>
        <line t="X" i="94" b="2" n="2"></line>
        <line t="C" i="95" b="2" n="2">!   Initilise value for this table element</line>
        <line t="X" i="96" b="2" n="2">    k = i</line>
        <line t="X" i="97" b="2" n="2"></line>
        <line t="C" i="98" b="2" n="2">!   Loop on the 8 bits of a byte</line>
        <line t="X" i="99" b="3" n="3">    do j = 1, 8</line>
        <line t="X" i="100" b="3" n="3"></line>
        <line t="C" i="101" b="3" n="3">!     Table element algorithm</line>
        <line t="X" i="102" b="4" n="4">      if (btest(k, 0)) then</line>
        <line t="X" i="103" b="4" n="4">        k = ieor(shiftr(k, 1), -306674912)</line>
        <line t="X" i="104" b="5" n="4">      else</line>
        <line t="X" i="105" b="5" n="4">        k = shiftr(k, 1)</line>
        <line t="X" i="106" b="5" n="3">      end if</line>
        <line t="X" i="107" b="5" n="3"></line>
        <line t="X" i="108" b="5" n="2">    end do</line>
        <line t="X" i="109" b="5" n="2"></line>
        <line t="C" i="110" b="5" n="2">!   Store table element</line>
        <line t="X" i="111" b="5" n="2">    this%table(i) = k</line>
        <line t="X" i="112" b="5" n="2"></line>
        <line t="X" i="113" b="5" n="1">  end do</line>
        <line t="X" i="114" b="5" n="1"></line>
        <line t="ES" i="115" b="5" n="1">end subroutine crc32_init_table</line>
        <line t="ES" i="116" b="1" n="1"></line>
        <line t="ES" i="117" b="1" n="1"></line>
        <line t="C" i="118" b="1" n="1">! Compute the CRC32 for a byte buffer array</line>
        <line k="crc32_encode_buffer" t="F" i="119" b="1" n="1">pure function crc32_encode_buffer( this, bytes ) result(res)</line>
        <line t="F" i="120" b="1" n="1"></line>
        <line t="C" i="121" b="1" n="1">! Calling object</line>
        <line t="X" i="122" b="1" n="1">  class(t_crc32), intent(in) :: this</line>
        <line t="X" i="123" b="1" n="1"></line>
        <line t="C" i="124" b="1" n="1">! Bytes to encode</line>
        <line t="X" i="125" b="1" n="1">  integer(kind=1), dimension(:), intent(in) :: bytes</line>
        <line t="X" i="126" b="1" n="1"></line>
        <line t="C" i="127" b="1" n="1">! The resulting CRC32</line>
        <line t="X" i="128" b="1" n="1">  integer :: res</line>
        <line t="X" i="129" b="1" n="1"></line>
        <line t="C" i="130" b="1" n="1">! Local variables</line>
        <line t="X" i="131" b="1" n="1">  integer :: i, n, idx</line>
        <line t="X" i="132" b="1" n="1"></line>
        <line t="C" i="133" b="1" n="1">! Initialise</line>
        <line t="X" i="134" b="1" n="1">  res = 0</line>
        <line t="X" i="135" b="1" n="1">  n = size(bytes)</line>
        <line t="X" i="136" b="1" n="1"></line>
        <line t="C" i="137" b="1" n="1">! Initialise CRC</line>
        <line t="X" i="138" b="1" n="1">  res = not(res)</line>
        <line t="X" i="139" b="1" n="1"></line>
        <line t="C" i="140" b="1" n="1">! Loop on the input bytes</line>
        <line t="X" i="141" b="2" n="2">  do i = 1, n</line>
        <line t="X" i="142" b="2" n="2"></line>
        <line t="C" i="143" b="2" n="2">!   Compute index for the lookup table</line>
        <line t="X" i="144" b="2" n="2">    idx = iand( ieor( res, int(bytes(i),4) ), 255 )</line>
        <line t="X" i="145" b="2" n="2"></line>
        <line t="C" i="146" b="2" n="2">!   Compute intermedate value of CRC</line>
        <line t="X" i="147" b="2" n="2">    res = ieor( shiftr( res, 8 ), this%table(idx) )</line>
        <line t="X" i="148" b="2" n="2"></line>
        <line t="X" i="149" b="2" n="1">  end do</line>
        <line t="X" i="150" b="2" n="1"></line>
        <line t="C" i="151" b="2" n="1">! Final CRC value</line>
        <line t="X" i="152" b="2" n="1">  res = not(res)</line>
        <line t="X" i="153" b="2" n="1"></line>
        <line t="EF" i="154" b="2" n="1">end function crc32_encode_buffer</line>
        <line t="EF" i="155" b="1" n="1"></line>
        <line t="EF" i="156" b="1" n="1"></line>
        <line t="C" i="157" b="1" n="1">! Compute the CRC32 for a character string</line>
        <line k="crc32_encode_string" t="F" i="158" b="1" n="1">pure function crc32_encode_string( this, s ) result(res)</line>
        <line t="F" i="159" b="1" n="1"></line>
        <line t="C" i="160" b="1" n="1">! Calling object</line>
        <line t="X" i="161" b="1" n="1">  class(t_crc32), intent(in) :: this</line>
        <line t="X" i="162" b="1" n="1"></line>
        <line t="C" i="163" b="1" n="1">! Bytes to encode</line>
        <line t="X" i="164" b="1" n="1">  character(len=*), intent(in) :: s</line>
        <line t="X" i="165" b="1" n="1"></line>
        <line t="C" i="166" b="1" n="1">! The resulting CRC32</line>
        <line t="X" i="167" b="1" n="1">  integer :: res</line>
        <line t="X" i="168" b="1" n="1"></line>
        <line t="C" i="169" b="1" n="1">! Call the byte buffer subroutine</line>
        <line t="X" i="170" b="1" n="1">  res = this%encode( character_to_bytes(s) )</line>
        <line t="X" i="171" b="1" n="1"></line>
        <line t="EF" i="172" b="1" n="1">end function crc32_encode_string</line>
        <line t="EF" i="173" b="1" n="1"></line>
        <line t="M" i="174" b="1" n="1">end module m_crc32</line>
        <line t="M" i="175" b="1" n="1"></line>
    </code>
</fmx>